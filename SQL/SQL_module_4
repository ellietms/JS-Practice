JOINS : 

==========

Inner JOIN : 

description : 

Most typical JOIN, it joins column in first table to second table

• It returns rows when there is at least one match in both tables

• Cannot deal with NULL values


code :

SELECT <alias1>.<column_name>, <alias1>.<column_name>, <alias2>.<column_name>

FROM <table_name1> <alias1> INNER JOIN <table_name2> <alias2> ON

<alias1>.<column_name> =

<alias2>.<column_name>;


===============

Left JOIN :


decription : 

All rows from the left side with the matching rows from the right side will be returned

If there are no columns matching in the right table, it returns NULL values



code :

SELECT <alias1>.<column_name>, <alias1>.<column_name>, <alias2>.<column_name>

FROM <table_name1> <alias1> LEFT JOIN <table_name2> <alias2> ON

<alias1>.<column_name> =

<alias2>.<column_name>;




=============

Right JOIN :


description :

Opposite of the LEFT OUTER JOIN, i.e. all rows from the right side with the matching rows from the left side will be returned

If there are no columns matching in the left table, it returns NULL values


Code :

SELECT <alias1>.<column_name>, <alias1>.<column_name>, <alias2>.<column_name>

FROM <table_name1> <alias1> RIGHT JOIN <table_name2> <alias2> ON

<alias1>.<column_name> =

<alias2>.<column_name>;


=========

Full JOIN :

description :


code : 
Combines left outer join and right outer join

• Returns rows from either table when the conditions are met and returns a null value when there is no match

• MySQL DOES NOT SUPPORT FULL OUTER JOIN SYNTAX!

• But we can simulate this join by combining LEFT and RIGHT joins with UNION 
